-------------->>>>>>>>>>PROJECT 1<<<<<<<<<<<<----------------

FILE DETAILS:
---->> mourMsgConfig.py
       
       This is used to generate input file. 

       - Type python mourMsgConfig.py
       - It will ask for number of messages to be sent and number of nodes to be present in the distributed system.
       - You can enter upto 200 messages. 
       - If you enter 10 nodes, all the nodes should be manually activated.
       - Messages, Sender, Receivers are randomly generated. 

---->> main_prog_bckup_bckup.c
       
       This is the main file that contains program. 

       - It is a fully automated program. 
       - No need to press anything.

       Procedure to run the code:
       
       -Activate all nodes required
       -Compile the code on cs1 machine
       -For compiling:
        gcc -pthread -lsctp -o main_prog_bckup_bckup main_prog_bckup_bckup.c
       -Execute the following command very quickly on each machine
       -For executing:
        ./main_prog_bckup_bckup
	
       -Wait till "FILE CLOSED" message appears on each machine. 
       -Each machine completes its execution.
       -Files will be generated. 

---->> TestScript.py

	This is used to generate the message if total ordering is followed or not.

	-After the "FILE CLOSED", run this script using the following command
	 
	 python TestCript.py
	
	Algorithm: 

	-This script reads the input file and finds intersection between any two destination lists.
	-It will automatically go through all the files generated by the machines.
	-All the intersections will have two messages of which the order need to be checked. 
	-This script detects whether the same order is followed by every process or not. 
	-It will print "ORDER NOT FOLLOWED"

---->> input.txt

	-Sample input file.

